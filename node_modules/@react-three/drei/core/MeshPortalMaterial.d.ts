import * as THREE from 'three';
import * as React from 'react';
import { ReactThreeFiber } from '@react-three/fiber';
export declare type PortalMaterialType = ReactThreeFiber.ShaderMaterialProps & {
    resolution: ReactThreeFiber.Vector2;
    blur: number;
    size: number;
    sdf: THREE.Texture;
    map: THREE.Texture;
};
declare global {
    namespace JSX {
        interface IntrinsicElements {
            portalMaterialImpl: PortalMaterialType;
        }
    }
}
export declare type PortalProps = JSX.IntrinsicElements['portalMaterialImpl'] & {
    blur?: number;
    resolution?: number;
    worldUnits?: boolean;
    eventPriority?: number;
    renderPriority?: number;
};
export declare const MeshPortalMaterial: React.ForwardRefExoticComponent<Pick<ReactThreeFiber.ExtendedColors<ReactThreeFiber.Overwrite<Partial<THREE.ShaderMaterial>, ReactThreeFiber.NodeProps<THREE.ShaderMaterial, [THREE.ShaderMaterialParameters]>>> & {
    resolution: ReactThreeFiber.Vector2;
    blur: number;
    size: number;
    sdf: THREE.Texture;
    map: THREE.Texture;
} & {
    blur?: number | undefined;
    resolution?: number | undefined;
    worldUnits?: boolean | undefined;
    eventPriority?: number | undefined;
    renderPriority?: number | undefined;
}, "attach" | "args" | "children" | "key" | "onUpdate" | "size" | "map" | keyof THREE.ShaderMaterial | "blur" | "resolution" | "worldUnits" | "renderPriority" | "eventPriority" | "sdf"> & React.RefAttributes<PortalMaterialType>>;
